
import sys

sys.path.append('../zoa/')
import zoa

r = zoa.parse('src/spor.zty')

sz     = {k: v for (k, v) in r.vals.items() if k.startswith('SZ')}
instrs = [(instr, name) for (name, instr) in r.vals.items() if name not in sz]
instrs.sort()

SLIT = r.vals.SLIT

SZ_MASK = r.vals.SZ_MASK
SZ1 = r.vals.SZ1
SZ2 = r.vals.SZ2
SZ4 = r.vals.SZ4

unsized = {'LCL', 'XL', 'JW', 'XW', 'SLIT'}

def writeCase(f, name, ret=None):
  ret = ret or name
  f.write(f'    case {name:<16}: return Slc_ntLit("{ret}");\n')

def withSize(f, name, instr):
  for sz in ('1', '2', '4'):
    writeCase(f, f'{name} + SZ{sz}', name + sz)

def slitCases(f):
  for v in range(0, 0x30):
    writeCase(f, f'SLIT + 0x{v:X}', f'{{0x{v:02X}}}')

with open('src/gen/name.c', 'w') as f:
  f.write('/* Generated by src/gen/gen.py from src/spor.zty. DO NOT EDIT MANUALLY */\n\n')
  f.write('#include "civ/civ.h"\n')
  f.write('#include "./spor.h"\n\n')
  f.write('/*extern*/ U1* unknownInstr = "UNKNOWN";\n\n')
  f.write('Slc instrName(U1 instr) {\n')
  f.write('  switch(instr) {\n')
  for instr, name in instrs:
    if name == 'SLIT': slitCases(f)
    elif instr < 0x40 or name in unsized: writeCase(f, name)
    else:                                 withSize(f, name, instr)

  f.write('  }\n')
  f.write('  return (Slc) {.dat = unknownInstr, .len = 7};\n')
  f.write('}\n')
