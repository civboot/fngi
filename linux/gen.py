import re

top = '''/** @file {filename}
 * THIS FILE WAS GENERATED BY linux/gen.py. DO NOT EDIT MANUALLY
 *
 * @brief {brief}
 */
'''

c_header = top + '''
#ifndef {defname}
#define {defname}
{include}

{content}

#endif // {defname}
'''

fngi_types = '''
typedef uint8_t              U1;
typedef uint16_t             U2;
typedef uint32_t             U4;
typedef uint32_t             UA;
typedef int8_t               I1;
typedef int16_t              I2;
typedef int32_t              I4;
typedef uint32_t             Ref;
'''

CONST_SP_REGEX = re.compile( r'#(?P<value>[\w_]+)\s+#0=(?P<name>.+)', re.MULTILINE)

def find_constants(path):
  if path.endswith('.sp'): regex = CONST_SP_REGEX
  else: assert False, path
  with open(path, 'r') as f:
    text = f.read()
  for m in re.finditer(regex, text):
    yield (m.group('name'), int(m.group('value'), 16))

def gen_file(filename, brief, include, content):
  defname = '__' + filename.upper().replace('.', '_')
  text = c_header.format(
    filename=filename,
    brief=brief,
    defname=defname,
    include=include,
    content=content)
  with open('linux/' + filename, 'w') as f: f.write(text)


def gen():
  constants = '\n'.join(
    f'#define {name.split()[0]:<20} {hex(value)}' for name, value
    in find_constants('kernel/kernel_c.sp')
  )

  gen_file(
    'constants.h', brief = "Contains common types in fngi",
    include = "",
    content = constants,
  )

gen()
