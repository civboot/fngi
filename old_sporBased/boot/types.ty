bitmap Instr [
\ name    var   msk
  sz1     0x00  0x30
  sz2     0x01  0x30
  sz4     0x02  0x30
  szA     0x02  0x30

  retz    0x01
  ret     0x02

  xsw     0x90
  xlw     0xA0

  xll     0x84
  xsl     0x85
]

bitmap Meta [
  type       0x00 0xC0
  const      0x00 0xC0
  fn         0x40 0xC0
  var        0x80 0xC0
  dict       0xC0 0xC0

  fn         0x40 0xC0
  fnPre      0x60 0xE0
  fnLarge    0x50 0xD0
  fnNormal   0x40 0x47
  fnNow      0x41 0x47
  fnSyn      0x42 0x47
  fnInline   0x43 0x47

  local      0x2000
]

bitmap Lvl [
\ name    var   msk
  silent  0x00  0xFF

  trace   0x2F  0x2F
  debug   0x1F  0x2F
  info    0x0F  0x2F
  warn    0x07  0x2F
  crit    0x03  0x2F
  user    0x01  0x2F
]

struct LogEvent [ lvl: Lvl; msg: Str; d: Dyn ]
struct FileEvent [ name: Data ]
struct DictEvent [ key: Str; ref: Int; m: Meta; v: Int ]

struct ErrEvent [
  code: Int
  ep: Int
  line: Int
  data: Arr[Data]
  cs: Arr[Int]
  csz: Data
  ls: Data
]

struct JmpEvent [ instr: Int; jloc: Int; depth: Int ]
struct RetEvent [ instr: Int; jloc: Int; depth: Int ]

enum Event [
  log: LogEvent
  file: FileEvent
  dict: DictEvent
  err: ErrEvent
  jmp: JmpEvent
  ret: RetEvent
]
