$c_fngi

$tAssert(1)
$tAssertNot(0)
$tAssert(1 == 1)
FN useEq ret(1 == 2);
$tAssertNot(useEq)

$tAssert(0x42 >= 0x30)
$tAssert(11 < 12)
$tAssert(and(0x1, 0x8) == TRUE)
$tAssertEq(and(0x1, 0x8), TRUE)
$tAssertNot(msk(0x1, 0x8))
$tAssertEq(msk(0xFF, 0xC), 0xC)
$tAssertEq(or(0x0, 0x8), TRUE)
$tAssertEq(jn(0x0, 0x8), 0x8)
$tAssertEq(0c\t, 0x09)

\ Test both forms of inline keyMeta
$tAssertEq(keyMeta(kdictGetK loc), TY_FN)
FN getKeyMeta PRE ret keyMeta(_);
$tAssertEq(getKeyMeta(kdictGetK loc), 0x40)

$tAssertEq(REF useEq, kdictGet useEq)

FN daAnswer ret 0x42
FN testXsw  ret xsw($lit(REF daAnswer))
$tAssertEq(0x42, testXsw)

FN testSET PRE
  $declVar(declL a, SZ4, 4) $declEnd
  $assertWsEmpty;
  4          -> SET a
  inc(GET a) -> SET a
  ret(GET a)
$tAssertEq(testSET, 5)

$declVar(declG glblAnswer, SZ1, 1)
  $sr1(42, gRef glblAnswer)

$tAssertEq(42, GET glblAnswer)


FN testXX1 ret(1 xx:and 2) $tAssertEq(testXX1, 1) \ handles pre
FN testXX2 ret(1 xx:drp 2) $tAssertEq(testXX2, 2) \ and non-pre

$assertWsEmpty
